class t extends AudioWorkletProcessor{constructor(...e){super(...e),this.audioSample=0,this.byteSample=0,this.drawMode="Points",this.errorDisplayed=!0,this.func=null,this.getValues=null,this.isFuncbeat=!1,this.isPlaying=!1,this.lastByteValue=[null,null],this.lastFuncValue=[null,null],this.lastTime=-1,this.outValue=[0,0],this.playbackSpeed=1,this.sampleRate=8e3,this.sampleRatio=1,this.srDivisor=1,Object.seal(this),t.deleteGlobals(),t.freezeGlobals(),this.port.addEventListener("message",(t=>this.receiveData(t.data))),this.port.start()}static deleteGlobals(){for(let t=0;t<26;++t)delete globalThis[String.fromCharCode(65+t)],delete globalThis[String.fromCharCode(97+t)];for(const t in globalThis)Object.prototype.hasOwnProperty.call(globalThis,t)&&delete globalThis[t]}static freezeGlobals(){Object.getOwnPropertyNames(globalThis).forEach((t=>{const e=globalThis[t],s=typeof e;"object"!==s&&"function"!==s||"globalThis"===t||Object.freeze(e),"function"===s&&Object.prototype.hasOwnProperty.call(e,"prototype")&&Object.freeze(e.prototype),Object.defineProperty(globalThis,t,{writable:!1,configurable:!1})}))}static getErrorMessage(t,e){const s=null===e?"compilation":"t="+e;if(!(t instanceof Error))return`${s} thrown: ${"string"==typeof t?t:JSON.stringify(t)}`;const{message:a,lineNumber:i,columnNumber:l}=t;return`${s} error: ${"string"==typeof a?a:JSON.stringify(a)}${"number"==typeof i&&"number"==typeof l?` (at line ${i-3}, character ${+l})`:""}`}process(e,[s]){const a=s[0].length;if(!a||!this.isPlaying)return!0;let i=this.sampleRatio*this.audioSample,{byteSample:l}=this;const r=[],o="Combined"===this.drawMode||"Diagram"===this.drawMode;for(let e=0;e<a;++e){i+=this.sampleRatio;const a=Math.floor(i/this.srDivisor)*this.srDivisor;if(this.lastTime!==a){let e;const s=Math.floor(l/this.srDivisor)*this.srDivisor;try{e=this.isFuncbeat?this.func(s/this.sampleRate,this.sampleRate):this.func(s)}catch(a){this.errorDisplayed&&(this.errorDisplayed=!1,this.sendData({error:{message:t.getErrorMessage(a,s),isRuntime:!0}})),e=NaN}e=Array.isArray(e)?[e[0],e[1]]:[e,e];let i=!1,h=2;for(;h--;){try{e[h]=+e[h]}catch(t){e[h]=NaN}o?(isNaN(e[h])?this.lastByteValue[h]=NaN:this.outValue[h]=this.getValues(e[h],h),i=!0):e[h]!==this.lastFuncValue[h]&&(isNaN(e[h])?isNaN(this.lastFuncValue[h])||(this.lastByteValue[h]=NaN,i=!0):(this.outValue[h]=this.getValues(e[h],h),i=!0))}i&&r.push({t:s,value:[...this.lastByteValue]}),l+=a-this.lastTime,this.lastFuncValue=e,this.lastTime=a}s[0][e]=this.outValue[0],s[1][e]=this.outValue[1]}if(Math.abs(l)>Number.MAX_SAFE_INTEGER)return this.resetTime(),!0;this.audioSample+=a;let h=!1;const n={};return l!==this.byteSample&&(h=!0,n.byteSample=this.byteSample=l),r.length&&(h=!0,n.drawBuffer=r),h&&this.sendData(n),!0}receiveData(t){if(void 0!==t.byteSample&&(this.byteSample=+t.byteSample||0,this.resetValues()),!0===t.errorDisplayed&&(this.errorDisplayed=!0),void 0!==t.isPlaying&&(this.isPlaying=t.isPlaying),void 0!==t.srDivisor&&(this.srDivisor=t.srDivisor),void 0!==t.playbackSpeed){const e=this.sampleRatio/this.playbackSpeed;this.playbackSpeed=t.playbackSpeed,this.setSampleRatio(e)}if(void 0!==t.mode)switch(this.isFuncbeat="Funcbeat"===t.mode,t.mode){case"Bytebeat":this.getValues=(t,e)=>(this.lastByteValue[e]=255&t)/127.5-1;break;case"Signed Bytebeat":this.getValues=(t,e)=>(this.lastByteValue[e]=t+128&255)/127.5-1;break;case"Floatbeat":case"Funcbeat":this.getValues=(t,e)=>{const s=Math.max(Math.min(t,1),-1);return this.lastByteValue[e]=Math.round(127.5*(s+1)),s};break;default:this.getValues=(t,e)=>this.lastByteValue[e]=NaN}void 0!==t.drawMode&&(this.drawMode=t.drawMode),void 0!==t.setFunction&&this.setFunction(t.setFunction),!0===t.resetTime&&this.resetTime(),void 0!==t.sampleRate&&(this.sampleRate=t.sampleRate),void 0!==t.sampleRatio&&this.setSampleRatio(t.sampleRatio)}sendData(t){this.port.postMessage(t)}resetTime(){this.byteSample=0,this.resetValues(),this.sendData({byteSample:0})}resetValues(){this.audioSample=0,this.lastByteValue=this.lastFuncValue=[null,null],this.lastTime=-1,this.outValue=[0,0]}setFunction(e){const s=Object.getOwnPropertyNames(Math),a=s.map((t=>Math[t]));s.push("int","window"),a.push(Math.floor,globalThis),t.deleteGlobals();let i=!1;const l=this.func;try{this.isFuncbeat?this.func=new Function(...s,e).bind(globalThis,...a):(e=e.trim().replace(/^eval\(unescape\(escape(?:`|\('|\("|\(`)(.*?)(?:`|'\)|"\)|`\)).replace\(\/u\(\.\.\)\/g,["'`]\$1%["'`]\)\)\)$/,((t,e)=>unescape(escape(e).replace(/u(..)/g,"$1%")))),this.func=new Function(...s,"t",`return 0,\n${e||0};`).bind(globalThis,...a)),i=!0,this.isFuncbeat?(this.func=this.func(),this.func(0,this.sampleRate)):this.func(0)}catch(e){return i||(this.func=l),this.errorDisplayed=!1,void this.sendData({error:{message:t.getErrorMessage(e,i?0:null),isCompiled:i},updateUrl:i})}this.errorDisplayed=!1,this.sendData({error:{message:"",isCompiled:i},updateUrl:!0})}setSampleRatio(t){const e=Math.floor(this.sampleRatio*this.audioSample)-this.lastTime;this.sampleRatio=t*this.playbackSpeed,this.lastTime=Math.floor(this.sampleRatio*this.audioSample)-e}}registerProcessor("audioProcessor",t);
//# sourceMappingURL=audio-processor.mjs.map
